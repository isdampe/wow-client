var log = require('util').log;

var defers = { };

var async = function (generatorFunc) {
  var generator, lastResult;

  var defer = function (err, data) {
    //Default defer
    if (err) {
      lastResult = { error: err };
    }
    else {
      lastResult = { returnVal: data };
    }

    generator.next();
  }

  for (var name in defers) {//Make user-defined defers work
    defer[name] = function () {
      lastResult = defers[name].apply(null, arguments);
      generator.next();
    };
  }

  generator = generatorFunc(

  function () {
    //await
    if (arguments.length == 1 && !isNaN(arguments[0])) {
      //function as sleep
      var mseconds = arguments[0];
      return setTimeout(function () {
        generator.next();
      }, mseconds);
    }

    if ('returnVal' in lastResult) {
      return lastResult.returnVal;
    }

    //Throw the exception
    throw lastResult.error;
  }

  , defer);

  generator.next();
};

module.exports = {
  async: async,
  configDefer: function (deferName, deferFunc) {
    defers[deferName] = deferFunc;
  }
};
